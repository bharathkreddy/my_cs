=================================================================
==10476==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619000000480 at pc 0x0001053eb800 bp 0x00016b082d30 sp 0x00016b0824c0
READ of size 1025 at 0x619000000480 thread T0
    #0 0x0001053eb7fc in printf_common(void*, char const*, char*)+0x644 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x1b7fc)
    #1 0x0001053ec59c in printf+0x68 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x1c59c)
    #2 0x000104d7c580 in main+0x68 (main:arm64+0x100000580)
    #3 0x00018ccaeb94 in start+0x17b8 (dyld:arm64e+0xfffffffffff3ab94)

0x619000000480 is located 0 bytes after 1024-byte region [0x619000000080,0x619000000480)
allocated by thread T0 here:
    #0 0x00010540d38c in malloc+0x78 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x3d38c)
    #1 0x000104d7c880 in pfix+0x14 (main:arm64+0x100000880)
    #2 0x000104d7c564 in main+0x4c (main:arm64+0x100000564)
    #3 0x00018ccaeb94 in start+0x17b8 (dyld:arm64e+0xfffffffffff3ab94)

SUMMARY: AddressSanitizer: heap-buffer-overflow (main:arm64+0x100000580) in main+0x68
Shadow bytes around the buggy address:
  0x619000000200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x619000000280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x619000000300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x619000000380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x619000000400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x619000000480:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x619000000500: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x619000000580: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x619000000600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x619000000680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x619000000700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==10476==ABORTING
